{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Hyperledger Composer ACL Support",
  "displayName": "Hyperledger Composer ACL",
  "scopeName": "source.composer.acl",
  "fileTypes": [
    "permissions.acl"
  ],
  "uuid": "805375ec-d614-41f5-8993-5843fe63ea77",
  "patterns": [
    {
      "include": "#statements"
    }
  ],
  "repository": {
    "statements": {
      "patterns": [
        {
          "include": "#rule"
        },
        {
          "include": "#comment"
        },
        {
          "include": "#object"
        }
      ]
    },
    "rule": {
      "name": "keyword.control.flow.composer-acl",
      "match": "\\b(rule)\\s+(\\w+)",
      "captures": {
        "1": {
          "name": "keyword.control.flow.composer-acl"
        },
        "2": {
          "name": "variable.other.composer-acl"
        }
      },
      "patterns": [
        {
          "include": "#comment"
        }
      ]
    },
    "object": {
      "begin": "\\{",
      "beginCaptures": [
        {
          "name": "punctuation.definition.dictionary.begin.composer-acl"
        }
      ],
      "end": "\\}",
      "endCaptures": [
        {
          "name": "punctuation.definition.dictionary.end.composer-acl"
        }
      ],
      "name": "meta.structure.dictionary.composer-acl",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "comment": "the composer-acl object key",
          "include": "#objectkey"
        },
        {
          "include": "#comments"
        },
        {
          "begin": ":",
          "beginCaptures": {
            "0": {
              "name": "punctuation.separator.dictionary.key-value.composer-acl"
            }
          },
          "end": "(?=\\})",
          "endCaptures": {
            "0": {
              "name": "punctuation.separator.dictionary.pair.composer-acl"
            }
          },
          "name": "meta.structure.dictionary.value.composer-acl",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "comment": "the composer-acl object value",
              "include": "#objectvalue"
            }
          ]
        },
        {
          "match": "[^\\s\\}]",
          "name": "invalid.illegal.expected-dictionary-separator.composer-acl"
        }
      ]
    },
    "objectkey": {
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#definition"
        },
        {
          "include": "#embeddedJS"
        }
      ]
    },
    "string": {
      "begin": "\"",
      "beginCaptures": [
        {
          "name": "punctuation.definition.string.begin.composer-acl"
        }
      ],
      "end": "\"",
      "endCaptures": [
        {
          "name": "punctuation.definition.string.composer-acl"
        }
      ],
      "name": "string.quoted.double.composer-acl",
      "patterns": [
        {
          "include": "#textLiterals"
        },
        {
          "include": "#textPaths"
        }
      ]
    },
    "definition": {
      "name": "storage.type.property.composer-acl",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#simpleDefinitions"
        },
        {
          "include": "#complexDefinitions"
        }
      ]
    },
    "simpleDefinitions": {
      "match": "\\b(description|operation|action)\\b",
      "name": "storage.type.property.composer-acl",
      "patterns": [
        {
          "include": "#comment"
        }
      ]
    },
    "complexDefinitions": {
      "match": "\\b(participant|resource|condition|transaction)\\b",
      "name": "storage.type.property.composer-acl",
      "patterns": [
        {
          "include": "#comment"
        }
      ]
    },
    "objectvalue": {
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#definition"
        },
        {
          "include": "#string"
        },
        {
          "include": "#constant"
        },
        {
          "include": "#crud-list"
        },
        {
          "include": "#embeddedJS"
        }
      ]
    },
    "constant": {
      "match": "\\b(?:ALL|ALLOW|DENY)\\b",
      "name": "support.type.composer-acl",
      "patterns": []
    },
    "crud-list": {
      "match": "\\b(?:CREATE|READ|UPDATE|DELETE)\\b",
      "name": "support.type.composer-acl",
      "patterns": [
        {
          "include": "#punctuation-comma"
        }
      ]
    },
    "punctuation-comma": {
      "name": "punctuation.separator.comma.composer-acl",
      "match": ",",
      "patterns": []
    },
    "embeddedJS": {
      "begin": "\\(",
      "beginCaptures": [
        {
          "name": "punctuation.definition.dictionary.begin.composer-acl"
        }
      ],
      "end": "\\)",
      "endCaptures": [
        {
          "name": "punctuation.definition.dictionary.end.composer-acl"
        }
      ],
      "name": "meta.structure.dictionary.composer-acl",
      "patterns": [
        {
          "comment": "Embedded javascript",
          "include": "source.js"
        },
        {
          "match": "[^\\s\\)]",
          "name": "invalid.illegal.expected-dictionary-separator.composer-acl"
        }
      ]
    },
    "textLiterals": {
      "match": "\\GANY(?=\\\")",
      "name": "variable.other.composer-acl",
      "patterns": []
    },
    "textPaths": {
      "begin": "(?=\\G(\\w+\\.\\w+))",
      "end": "(?=\\\")",
      "patterns": [
        {
          "comment": "dotted path syntax",
          "include": "#path"
        }
      ]
    },
    "path": {
      "match": "(\\w+)|(\\.|\\*|#)",
      "captures": {
        "1": {
          "name": "variable.other.object.composer-acl"
        },
        "2": {
          "name": "variable.other.object.composer-acl"
        }
      },
      "patterns": []
    },
    "punctuation-period": {
      "name": "punctuation.separator.period.composer-acl",
      "match": ".",
      "patterns": []
    },
    "comment": {
      "patterns": [
        {
          "name": "comment.block.documentation.js",
          "begin": "/\\*\\*(?!/)",
          "end": "\\*/",
          "captures": {
            "0": {
              "name": "punctuation.definition.comment.js"
            }
          },
          "patterns": []
        },
        {
          "name": "comment.block.js",
          "begin": "/\\*",
          "end": "\\*/",
          "captures": {
            "0": {
              "name": "punctuation.definition.comment.js"
            }
          }
        },
        {
          "begin": "(^[ \\t]+)?(?=//)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.whitespace.comment.leading.js"
            }
          },
          "end": "(?=$)",
          "patterns": [
            {
              "name": "comment.line.double-slash.js",
              "begin": "//",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.js"
                }
              },
              "end": "(?=$)"
            }
          ]
        }
      ]
    }
  }
}